from django.core.management.base import BaseCommand
from main.models import User, DanceStyle, Trainer, Schedule
from datetime import time
from django.utils import timezone
from datetime import timedelta


class Command(BaseCommand):
    help = 'Fill database with test data'

    def handle(self, *args, **options):
        # –°–æ–∑–¥–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∞–Ω—Ü–µ–≤
        styles = [
            {'name': '–•–∏–ø-—Ö–æ–ø', 'description': '–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π —É–ª–∏—á–Ω—ã–π —Ç–∞–Ω–µ—Ü'},
            {'name': '–ë–∞–ª—å–Ω—ã–µ —Ç–∞–Ω—Ü—ã', 'description': '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–Ω—ã–µ —Ç–∞–Ω—Ü—ã'},
            {'name': '–°–∞–ª—å—Å–∞', 'description': '–°—Ç—Ä–∞—Å—Ç–Ω—ã–π –ª–∞—Ç–∏–Ω—Å–∫–∏–π —Ç–∞–Ω–µ—Ü'},
            {'name': '–ë–∞–ª–µ—Ç', 'description': '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Ö–æ—Ä–µ–æ–≥—Ä–∞—Ñ–∏—è'},
            {'name': '–î–∂–∞–∑-—Ñ–∞–Ω–∫', 'description': '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –¥–∂–∞–∑–∞'},
        ]

        for style_data in styles:
            DanceStyle.objects.get_or_create(**style_data)

        self.stdout.write('–°–æ–∑–¥–∞–Ω—ã –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∞–Ω—Ü–µ–≤')

        # –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
        trainers_data = [
            {'username': 'anna_hiphop', 'first_name': '–ê–Ω–Ω–∞', 'last_name': '–ò–≤–∞–Ω–æ–≤–∞', 'email': 'anna@bombim.ru',
             'phone': '+79111111111', 'password': 'test123', 'role': 'trainer'},
            {'username': 'max_ballroom', 'first_name': '–ú–∞–∫—Å–∏–º', 'last_name': '–ü–µ—Ç—Ä–æ–≤', 'email': 'max@bombim.ru',
             'phone': '+79222222222', 'password': 'test123', 'role': 'trainer'},
            {'username': 'latin_olga', 'first_name': '–û–ª—å–≥–∞', 'last_name': '–°–∏–¥–æ—Ä–æ–≤–∞', 'email': 'olga@bombim.ru',
             'phone': '+79333333333', 'password': 'test123', 'role': 'trainer'},
        ]

        for trainer_data in trainers_data:
            user, created = User.objects.get_or_create(
                username=trainer_data['username'],
                defaults={
                    'first_name': trainer_data['first_name'],
                    'last_name': trainer_data['last_name'],
                    'email': trainer_data['email'],
                    'phone': trainer_data['phone'],
                    'role': trainer_data['role']
                }
            )
            if created:
                user.set_password(trainer_data['password'])
                user.save()

                # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
                trainer = Trainer.objects.create(
                    user=user,
                    bio=f'–û–ø—ã—Ç–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å {trainer_data["first_name"]} {trainer_data["last_name"]}',
                    photo='trainers/default.jpg'
                )

                # –ù–∞–∑–Ω–∞—á–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                if trainer_data['username'] == 'anna_hiphop':
                    trainer.styles.add(DanceStyle.objects.get(name='–•–∏–ø-—Ö–æ–ø'))
                    trainer.styles.add(DanceStyle.objects.get(name='–î–∂–∞–∑-—Ñ–∞–Ω–∫'))
                elif trainer_data['username'] == 'max_ballroom':
                    trainer.styles.add(DanceStyle.objects.get(name='–ë–∞–ª—å–Ω—ã–µ —Ç–∞–Ω—Ü—ã'))
                elif trainer_data['username'] == 'latin_olga':
                    trainer.styles.add(DanceStyle.objects.get(name='–°–∞–ª—å—Å–∞'))

        self.stdout.write('–°–æ–∑–¥–∞–Ω—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏')

        # –°–æ–∑–¥–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        schedules_data = [
            {
                'day_of_week': 0,  # –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
                'start_time': time(18, 0),
                'end_time': time(19, 30),
                'dance_style': DanceStyle.objects.get(name='–•–∏–ø-—Ö–æ–ø'),
                'trainer': Trainer.objects.get(user__username='anna_hiphop'),
                'start_date': timezone.now().date() - timedelta(days=7),
            },
            {
                'day_of_week': 1,  # –í—Ç–æ—Ä–Ω–∏–∫
                'start_time': time(19, 0),
                'end_time': time(20, 30),
                'dance_style': DanceStyle.objects.get(name='–ë–∞–ª—å–Ω—ã–µ —Ç–∞–Ω—Ü—ã'),
                'trainer': Trainer.objects.get(user__username='max_ballroom'),
                'start_date': timezone.now().date() - timedelta(days=7),
            },
            {
                'day_of_week': 2,  # –°—Ä–µ–¥–∞
                'start_time': time(17, 30),
                'end_time': time(19, 0),
                'dance_style': DanceStyle.objects.get(name='–°–∞–ª—å—Å–∞'),
                'trainer': Trainer.objects.get(user__username='latin_olga'),
                'start_date': timezone.now().date() - timedelta(days=7),
            },
            {
                'day_of_week': 3,  # –ß–µ—Ç–≤–µ—Ä–≥
                'start_time': time(18, 0),
                'end_time': time(19, 30),
                'dance_style': DanceStyle.objects.get(name='–î–∂–∞–∑-—Ñ–∞–Ω–∫'),
                'trainer': Trainer.objects.get(user__username='anna_hiphop'),
                'start_date': timezone.now().date() - timedelta(days=7),
            },
            {
                'day_of_week': 4,  # –ü—è—Ç–Ω–∏—Ü–∞
                'start_time': time(18, 30),
                'end_time': time(20, 0),
                'dance_style': DanceStyle.objects.get(name='–•–∏–ø-—Ö–æ–ø'),
                'trainer': Trainer.objects.get(user__username='anna_hiphop'),
                'start_date': timezone.now().date() - timedelta(days=7),
            },
            {
                'day_of_week': 5,  # –°—É–±–±–æ—Ç–∞
                'start_time': time(11, 0),
                'end_time': time(12, 30),
                'dance_style': DanceStyle.objects.get(name='–ë–∞–ª–µ—Ç'),
                'trainer': Trainer.objects.get(user__username='max_ballroom'),
                'start_date': timezone.now().date() - timedelta(days=7),
            },
            {
                'day_of_week': 6,  # –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
                'start_time': time(12, 0),
                'end_time': time(13, 30),
                'dance_style': DanceStyle.objects.get(name='–°–∞–ª—å—Å–∞'),
                'trainer': Trainer.objects.get(user__username='latin_olga'),
                'start_date': timezone.now().date() - timedelta(days=7),
            },
            {
                'day_of_week': 0,  # –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (—É—Ç—Ä–µ–Ω–Ω–µ–µ)
                'start_time': time(10, 0),
                'end_time': time(11, 30),
                'dance_style': DanceStyle.objects.get(name='–ë–∞–ª–µ—Ç'),
                'trainer': Trainer.objects.get(user__username='max_ballroom'),
                'start_date': timezone.now().date() - timedelta(days=7),
            },
            {
                'day_of_week': 2,  # –°—Ä–µ–¥–∞ (–≤–µ—á–µ—Ä–Ω–µ–µ)
                'start_time': time(20, 0),
                'end_time': time(21, 30),
                'dance_style': DanceStyle.objects.get(name='–ë–∞–ª—å–Ω—ã–µ —Ç–∞–Ω—Ü—ã'),
                'trainer': Trainer.objects.get(user__username='max_ballroom'),
                'start_date': timezone.now().date() - timedelta(days=7),
            },
            {
                'day_of_week': 4,  # –ü—è—Ç–Ω–∏—Ü–∞ (–¥–Ω–µ–≤–Ω–æ–µ)
                'start_time': time(16, 0),
                'end_time': time(17, 30),
                'dance_style': DanceStyle.objects.get(name='–î–∂–∞–∑-—Ñ–∞–Ω–∫'),
                'trainer': Trainer.objects.get(user__username='anna_hiphop'),
                'start_date': timezone.now().date() - timedelta(days=7),
            },
        ]

        for schedule_data in schedules_data:
            schedule, created = Schedule.objects.get_or_create(
                day_of_week=schedule_data['day_of_week'],
                start_time=schedule_data['start_time'],
                end_time=schedule_data['end_time'],
                dance_style=schedule_data['dance_style'],
                trainer=schedule_data['trainer'],
                defaults={
                    'start_date': schedule_data['start_date'],
                    'is_recurring': True,
                    'is_active': True
                }
            )
            if created:
                self.stdout.write(f'–°–æ–∑–¥–∞–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ: {schedule}')

        self.stdout.write('–°–æ–∑–¥–∞–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
        client_data = {
            'username': 'testclient',
            'first_name': '–¢–µ—Å—Ç',
            'last_name': '–ö–ª–∏–µ–Ω—Ç–æ–≤',
            'email': 'client@bombim.ru',
            'phone': '+79444444444',
            'password': 'test123',
            'role': 'client'
        }

        client_user, created = User.objects.get_or_create(
            username=client_data['username'],
            defaults={
                'first_name': client_data['first_name'],
                'last_name': client_data['last_name'],
                'email': client_data['email'],
                'phone': client_data['phone'],
                'role': client_data['role']
            }
        )
        if created:
            client_user.set_password(client_data['password'])
            client_user.save()
            self.stdout.write('–°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç')

        self.stdout.write(
            self.style.SUCCESS('‚úÖ –ë–∞–∑–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!')
        )
        self.stdout.write('\nüë• –°–æ–∑–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:')
        self.stdout.write('   - anna_hiphop / test123 (–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å)')
        self.stdout.write('   - max_ballroom / test123 (–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å)')
        self.stdout.write('   - latin_olga / test123 (–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å)')
        self.stdout.write('   - testclient / test123 (–∫–ª–∏–µ–Ω—Ç)')
        self.stdout.write('   - admin / –≤–∞—à_–ø–∞—Ä–æ–ª—å (—Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)')